@*
    
    Copyright(c) Voat, Inc.

    This file is part of Voat.

    This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl-3.0.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an
    "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
    or implied. See the License for the specific language governing
    rights and limitations under the License.

    All Rights Reserved.

*@

@model Voat.Models.ViewModels.SubverseModeratorsViewModel

<div id="container">
    <div id="about-main" class="content about-page" role="main">

        <h1>Subverse owner moderator management interface for: <a href="/v/@ViewBag.SubverseName">@ViewBag.SubverseName</a></h1>

        <br />
        <div class="alert alert-info">Use this area to add/edit/remove moderators for your subverse.</div>

        <div class="form-horizontal">
            <hr />
            @Html.ActionLink("Add a new moderator", "AddModerator")
            <hr />

            <h1>Currently active moderators</h1>
            @if (Model.Moderators != null && Model.Moderators.Any())
            {
                <table class="table table-striped table-condensed">
                    <thead>
                        <tr>
                            <th><b>Username</b></th>
                            <th><b>Clearance</b></th>
                            <th><b>Invited By</b></th>
                            <th><b>Date</b></th>
                            <th><b>Remove</b></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.Moderators)
                        {
                            <tr>
                                <td><a href="/user/@item.UserName">@item.UserName</a></td>
                                <td>@item.Power - @Enum.GetName(typeof(Voat.Domain.Models.ModeratorLevel), item.Power)</td>
                                <td>@item.CreatedBy</td>
                                <th>@item.CreationDate</th>
                                <td>@Html.ActionLink("Remove", "RemoveModerator", new { id = item.ID })</td>
                            </tr>
                        }

                    </tbody>
                </table>
            }
            else
            {
                <p>No moderators found</p>
            }

            <hr/>
            <h1>Pending moderator invitations</h1>
            @if (Model.Invitations != null && Model.Invitations.Any())
            {
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th><b>Username</b></th>
                        <th><b>Clearance</b></th>
                        <th><b>Invited by</b></th>
                        <th><b>Invited on</b></th>
                        <th><b>Recall invitation</b></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.Invitations)
                    {
                        <tr>
                            <td><a href="/user/@item.Recipient">@item.Recipient</a></td>
                            <td>@item.Power - @Enum.GetName(typeof(Voat.Domain.Models.ModeratorLevel), item.Power)</td>
                            <td>@item.CreatedBy</td>
                            <td>@item.CreationDate</td>
                            <td>@Html.ActionLink("Recall", "RecallModeratorInvitation", new { invitationId = item.ID })</td>
                        </tr>
                    }

                </tbody>
            </table>
            }
            else
            {
            <p>No pending invites found</p>
            }

        </div>

    </div>
</div>
