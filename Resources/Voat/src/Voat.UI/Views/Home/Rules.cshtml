@*
    
    Copyright(c) Voat, Inc.

    This file is part of Voat.

    This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl-3.0.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an
    "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
    or implied. See the License for the specific language governing
    rights and limitations under the License.

    All Rights Reserved.

*@

@model IEnumerable<Voat.Rules.RuleInformationWithOutcome>
<style type="text/css">
    h1, h2, h3 { 
        font-size:1.3em;
        font-weight:bold;

    }
    body { font-size: 1.3em;}
    .outcome { 
       padding:5px 0px 5px 5px;
       margin:0px 0px 0px 15px;
      
    }
    .rule { 
        float:left;
        width:50%;
    }
    .rule > div > h2:hover, .series:hover { 
        cursor:pointer;

    }
    .outcome-Allowed { 
        background-color: rgba(0,254,0,0.15);
    }
    .outcome-Denied { 
        background-color: rgba(251,0,0,0.15);
    }
     .outcome-Unevaluated { 
        background-color: rgba(0,0,0,0.10);
    }
    
    @@media screen and (max-width:600px) {
       .rule { 
            float:none;
            width:100%;
        }
    }
    .desc { 
        padding-top:5px;
        
        min-height:50px;

    }
</style>

<div id="container">
    <div class="submission even" style="padding:10px;">
        <h1>Rules Voat is Running</h1>
        <p>
            This page displays the rules that Voat uses when determining a user's permissions for various tasks. If a rule is displayed below it is actively running.
        </p>    
    </div>
 
    @{
        string prev = "";
        int index = 0;
    }
    @foreach (var item in Model) {


        string major = item.Info.Rule.Number.Substring(0, item.Info.Rule.Number.IndexOf(".") );
       
        if (prev != major || index == 0) {
            <div style="clear:both;"></div>

            <div class="series" data-series="@major-series">
                <h1>@(major + ".x") Series Rules</h1>
                <hr />
            </div>

            index = 2;
        }
        <div class="rule @major-series" style="padding: 10px;">

            <div style="padding:5px;">
                <h2><strong>Rule @Html.DisplayFor(modelItem => item.Info.Rule.Number)</strong> (@Html.DisplayFor(modelItem => item.Info.Rule.Name))</h2>

                <div style="padding-left:15px;display:none;">
                    <div class="desc">

                        @Html.DisplayFor(modelItem => item.Info.Description)
                    </div>
                    
                    <span style="margin-top:15px;">Applies To: @item.Info.Rule.Scope.ToString()</span>
                    <h2>Psuedo Logic</h2>
<pre>
<code>
    @Html.DisplayFor(modelItem => item.Info.PsuedoLogic)
</code>
</pre>
                </div>
                @if (item.Outcome != null) {
                    <div class="outcome outcome-@item.Outcome.Result">Outcome: <strong>@item.Outcome.Result</strong></div>
                }
            </div>
            <div style="clear:both;"></div>
        </div>

        prev = major;
        index++;
        if ((index % 2) == 0) {
            <div style="clear:both;"></div>
        }
       
    }
    </div>


