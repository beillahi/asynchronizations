@*
    
    Copyright(c) Voat, Inc.

    This file is part of Voat.

    This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl-3.0.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an
    "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
    or implied. See the License for the specific language governing
    rights and limitations under the License.

    All Rights Reserved.

*@

@{
    Layout = "~/Views/Shared/Layouts/_LayoutContainer.cshtml";
} 
@using Voat.Models.ViewModels

@model ChatViewModel


@{
    ViewBag.Title = "Chat " + Model.Room.Name;
    var history = ChatHistory.History(Model.Room.ID).ToList();
    history.Add(new ChatMessage() { User = new UserContext(CONSTANTS.SYSTEM_USER_NAME), RoomID = Model.Room.Name, Message = "<p>You have joined the " + Model.Room.Name + " chatroom</p>", CreationDate = DateTime.UtcNow });
}
@if (VoatSettings.Instance.SignalrEnabled && VoatSettings.Instance.ChatEnabled)
{
    <div tabindex=0 role="banner">
        <div>
            <div>
                <a title="@VoatSettings.Instance.SiteSlogan" href="/">
                    <img id="header-img" src="@VoatSettings.Instance.SiteLogo" alt="@VoatSettings.Instance.SiteName" height="31" width="112">
                </a>
            </div>
        </div>
    </div>

    <div class="chatContent">
        <div>
            <div class="sidecontentbox">
                <div class="title">
                    <h1 class="alert-h1">@Model.Room.Name chat</h1>
                    <h2>@Model.Room.Description</h2>
                </div>
                <br/>
                <div>
                    @foreach (var room in Model.AvailableRooms)
                    {
                        <span class="button"><a class="btn-whoaverse" href="/chat/@room.ID" title="@room.Description">@room.Name</a></span>
                    }
                </div>

                <div class="content">
                    <div id="subverseChatRoom" class="subverseChatRoomContent">
                        @Html.Partial("_RoomHistory", history)
                    </div>
                </div>

                @*<script type="text/javascript">
                        window.onload = function () { joinSubverseChatRoom('@Model'); }
                    </script>*@

                @if (User.Identity.IsAuthenticated)
                {
                    if (VoatSettings.Instance.MinimumCommentPointsForSendingChatMessages > 0)
                    {
                        <span>@VoatSettings.Instance.MinimumCommentPointsForSendingChatMessages CCP is required to send messages</span>
                    }
                    <input id="chatInputBox" onkeydown="if (event.keyCode == 13) sendChatMessage('@Model.Room.ID', '@Context.Request.Query["access"]');" class="form-control" data-val="true" data-val-length="Please write at least 3 characters." data-val-length-max="100" data-val-length-min="3" data-val-required="Please enter a message." name="chatInputBox" placeholder="Say something." value="" type="text">
                    <button type="button" class="btn-whoaverse contribute" onclick="sendChatMessage('@Model.Room.ID', '@Context.Request.Query["access"]');">send</button>
                }
                else
                {
                    <a href="#" onclick="mustLogin();" class="login-required">Login to send messages</a>
                }
            </div>
        </div>
    </div>
}
else
{
    <div>Chat is currently disabled :(</div>
}

@section PageScripts
    {
    <script type="text/javascript">
            $(document).ready(function () {
                joinChat('@Model.Room.ID', '@Context.Request.Query["access"]');
            });
            scrollChatToBottom(true);
    </script>
}
@section PageHeader
    {
    <style type="text/css">
        .chat-message-body {
            font-size: 1.35em;
        }
        .dark .chat-message-timestamp {
            color: #9b9b9b;
        }
        .light .chat-message-timestamp {
            color: #707070;
        }
    </style>
}
